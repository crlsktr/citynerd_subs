WEBVTT
Kind: captions
Language: en

00:00:00.080 --> 00:00:02.070 align:start position:0%
 
in a previous video i mentioned that  traffic congestion is not a linear  phenomenon every car you add to the  system imposes just a little more delay  on everyone else and each successive car  imposes a bit more delay than the last  one did i don't think this is intuitive  or well understood but it has or at  least it should have  huge policy implications so my hope is  by laying it all out here i can help  spread a little more understanding it's  all up next this is city nerd weekly  content on cities and transportation  usually a top 10 list but sometimes  delving into something a little more  theoretical and welcome to this week  first of all i'm going to start with a  kind of controversial assertion which is  that traffic congestion is bad and  trying to reduce it is actually a worthy  policy goal congestion wastes people's  time and here i really don't care about  single occupant vehicles but a lot of  buses get stuck in the same traffic  congestion consumes more energy it  creates unreliability and uncertainty it  delays emergency vehicles it means it  costs more to move goods through the  city and it tends to grow exponentially  as you add more traffic now there are  some really math heavy theoretical  arguments for why this is the case but i  wanted to put it in a context that's  more intuitive and relatable so i'm  going to give an example we're all  familiar with which is waiting at  traffic signals and there's still going  to be math in this but i think it's  going to be pretty straightforward so  here's the setup it's a typical weekday  and we're at the pm peak hour which  we're going to call 4 30 to 5 30 pm  we're at a really typical urban  signalized intersection with protected  left turns and left turn pockets and  we're looking at a particular movement  which is the eastbound left turn and  let's say the way the signal is  programmed the green time for this  movement never gets extended past 12  seconds because there are a lot of other  busy movements that need to get served  so that's six cars assuming a typical  saturation flow rate of a car every two  seconds in reality that can vary it's  less than six if there are people  on their phone not paying attention to  the signal or it could be more if the  driving is super aggressive but six is  gonna be a pretty typical traffic  engineering assumption now for that  eastbound left turn i've set up kind of  a generic demand profile for the hour  this isn't the one i'm gonna use for our  real world example but this generic  profile has a peak demand of five cars  per 120 second cycle at 5 pm and then  4.5 vehicles at the beginning and end of  the hour this is fairly typical in an  urban setting where the peak of the peak  is something like 10  higher than the minutes at the edge of  the peak hour but of course actual  observed traffic volumes are not regular  and predictable like this otherwise well  let's just say transportation planning  and traffic engineering would be way  easier with the generic profile only the  signal would operate fine because you'd  always have this smooth demand that runs  just under the capacity but  traffic isn't consistent instead it is  stochastic the traffic volume at any  given minute is random but generally  along kind of a normal distribution of  the average demand so i took my generic  profile and i applied a spreadsheet  function that generates a number that's  randomized along a normal distribution  for the average demand of each 120  second increment so what you get is a  set of 30 numbers one for each two  minute signal cycle that are random but  they center around that generic profile  and this is starting to look more like  what you'd see on an average day except  well they're fractions so of course  we're gonna round them but we're gonna  keep these raw fractional numbers in our  back pocket because they're gonna come  in handy later so you'll see i end up  with 150 cars during the hour which is a  tiny bit higher than the  142.5 that i expected but you know  random factors and rounding now remember  the capacity of this left turn is six  vehicles per 120 seconds so you can see  that there are eight vehicles over the  course of the hour that arrive in time  for a protected turn phase but six  vehicles have already arrived ahead of  them so they don't get served and they  have to wait another 120 second cycle  but it's actually worse than that each  of the eight vehicles spills into the  next cycle taking away some of the  capacity that was supposed to be  available for the vehicles that arrived  in the next two minutes so depending on  how much demand there was for the next  cycle you can potentially have a  cascading effect here so for this first  baseline scenario with 150 cars you get  seven additional cars that are displaced  so there are actually a total of 15 cars  that have to wait the additional 120  seconds right here you should already  start to realize that this is a  compounding problem so let's set up a  performance measure we're going to track  average delay which is probably the most  commonly used metric for signalized  intersection performance it's the basis  of level of service or loss so a few  assumptions let's say the average car  shows up halfway through the cycle and  if it gets served within that cycle  which most of them do in this baseline  scenario then those cars will average 60  seconds of signal delay or half to cycle  this is the way everyone hopes the  intersection operates and as long as you  can keep traffic conditions in the  uncongested regime you can really keep  adding cards without any additional  average delay so for example i can take  my randomized distribution and scale it  down until there's no congestion at all  this happens at about 120 vehicles and  in that case the average delay is 60  seconds no one is getting hit with an  extra cycle you really can't do better  than this but at 150 vehicles i've got  135 that are waiting just the 60 seconds  and i've got 15 that are waiting an  additional 120 seconds that's a total of  10 800 seconds divided by 150 vehicles  that's 72 seconds per vehicle and note  that eight of my 30 cycles are now right  at capacity and nine are over capacity  so odds are the next car that shows up  is probably going to have to weigh an  additional cycle okay so that's what the  left turn looks like when it's starting  to creep into a congested state now  let's add 10 vehicles i'm gonna scale up  my raw unrounded numbers until the  rounded distribution  adds up to 160. and this is what that  looks like 10 of my 32 second increments  now have an additional vehicle those  vehicles push other vehicles into  failure too so you should really start  to intuit that this is a domino effect  and it's gonna get progressively worse  every time i add 10 more cars this  vehicle that shows up at 440 is the  worst case it impacts the next four  cycles adding another 120 seconds of  delay for one vehicle in each of those  four cycles so the bottom line is i've  only added 10 vehicles that's 6.7  but my average delay goes from 72  seconds to 81 and that's a 12.5 increase  also where 17 of my 30 cycles were at or  over capacity when i had 150 vehicles  now 20 of the 30 cycles are which again  is increasing the probability that the  next car will hit a cycle that's already  maxed out i'm going to go through  additional scenarios and talk about  policy implications etc but first if  you're getting value out of this video  please pay your respects to the  algorithm and in general if you enjoy  nerdy explorations of transportation in  cities go ahead and subscribe if you  haven't already it's much appreciated  okay i won't get too far into the  details of the remaining scenarios  because it's the same story and it just  gets messier but here's what happens  at 170 vehicles the average delay is 98  seconds so we increased the original  volume of 150 by 13.3 percent but your  average delay is up 36  then at 180 vehicles your average delay  is 144 seconds so you've scaled your  traffic volume up 20  but you've increased the average delay  by a hundred percent you've doubled it  remember this is the same randomized  demand curve i started with i'm just  scaling it up and down the precise  percentages i'm citing will change if i  start with a different random number  seeding but the overall story is always  going to be the same this is exponential  growth and really by this point people  are starting to look at different routes  that avoid this left turn people are  taking the bus and biking or adjusting  their departure time or just not making  a trip at all and the city traffic  engineer is definitely getting phone  calls so a couple notes first despite  the way i characterized traffic dynamics  here there's really no such thing as  existing traffic that was minding its  own business and additional traffic  that's causing all the problems if  traffic is in a congested state then  every driver is really sharing equally  in the blame and the consequences as a  driver you perceive congestion as  something that's happening to you but  the reality is you are the congestion  second keep in mind this is very  simplified actual urban traffic is  dynamic and complex and congestion  manifests in a lot of ways for example  in a congested state that 12 second left  turn phase may not be able to  accommodate six vehicles you could have  spill back from a downstream bottleneck  that blocks the receiving lane you could  have excessive cueing in the through  lane that blocks the churn pocket so you  can't queue up six vehicles for the  phase and on the flip side the turn lane  itself can overflow and block the  through lane so these are all ways that  congested conditions reduce the actual  efficiency of the system so really what  i've presented here is kind of an  optimistic scenario so the point i hope  i've driven home here is not only do  more cars mean more congestion each  additional car means exponentially more  congestion which is bad for everyone so  what's the solution for some people  usually the people who are in charge of  policy and funding what this all  suggests is you really need to build  roads and intersections as big as  possible so you never reach the  congested state you can go to pretty  much any us state and see this approach  in action and decide for yourself if it  actually works or not another approach  is to make sure that the alternatives to  driving are abundant and competitive so  that when you do start tipping over into  hyper congestion people have the freedom  to make other choices or and hear me out  congestion pricing get people to pay for  the privilege of driving on an efficient  reliable uncongested network and invest  the proceeds in transit and active  transportation i made that sound simple  there's a lot to get into there and i'll  probably do that in a future video but  feel free to let me know your thoughts  on congestion pricing down in the  comments below and that's all i've got  for today keep the great comments and  viewer suggestions coming they really do  make this a better channel thanks for  joining and i'll be back with a new  topic next week see you then

00:00:02.070 --> 00:00:04.230 align:start position:0%
in a previous video i mentioned that  traffic congestion is not a linear  phenomenon every car you add to the  system imposes just a little more delay  on everyone else and each successive car  imposes a bit more delay than the last  one did i don't think this is intuitive  or well understood but it has or at  least it should have  huge policy implications so my hope is  by laying it all out here i can help  spread a little more understanding it's  all up next this is city nerd weekly  content on cities and transportation  usually a top 10 list but sometimes  delving into something a little more  theoretical and welcome to this week  first of all i'm going to start with a  kind of controversial assertion which is  that traffic congestion is bad and  trying to reduce it is actually a worthy  policy goal congestion wastes people's  time and here i really don't care about  single occupant vehicles but a lot of  buses get stuck in the same traffic  congestion consumes more energy it  creates unreliability and uncertainty it  delays emergency vehicles it means it  costs more to move goods through the  city and it tends to grow exponentially  as you add more traffic now there are  some really math heavy theoretical  arguments for why this is the case but i  wanted to put it in a context that's  more intuitive and relatable so i'm  going to give an example we're all  familiar with which is waiting at  traffic signals and there's still going  to be math in this but i think it's  going to be pretty straightforward so  here's the setup it's a typical weekday  and we're at the pm peak hour which  we're going to call 4 30 to 5 30 pm  we're at a really typical urban  signalized intersection with protected  left turns and left turn pockets and  we're looking at a particular movement  which is the eastbound left turn and  let's say the way the signal is  programmed the green time for this  movement never gets extended past 12  seconds because there are a lot of other  busy movements that need to get served  so that's six cars assuming a typical  saturation flow rate of a car every two  seconds in reality that can vary it's  less than six if there are people  on their phone not paying attention to  the signal or it could be more if the  driving is super aggressive but six is  gonna be a pretty typical traffic  engineering assumption now for that  eastbound left turn i've set up kind of  a generic demand profile for the hour  this isn't the one i'm gonna use for our  real world example but this generic  profile has a peak demand of five cars  per 120 second cycle at 5 pm and then  4.5 vehicles at the beginning and end of  the hour this is fairly typical in an  urban setting where the peak of the peak  is something like 10  higher than the minutes at the edge of  the peak hour but of course actual  observed traffic volumes are not regular  and predictable like this otherwise well  let's just say transportation planning  and traffic engineering would be way  easier with the generic profile only the  signal would operate fine because you'd  always have this smooth demand that runs  just under the capacity but  traffic isn't consistent instead it is  stochastic the traffic volume at any  given minute is random but generally  along kind of a normal distribution of  the average demand so i took my generic  profile and i applied a spreadsheet  function that generates a number that's  randomized along a normal distribution  for the average demand of each 120  second increment so what you get is a  set of 30 numbers one for each two  minute signal cycle that are random but  they center around that generic profile  and this is starting to look more like  what you'd see on an average day except  well they're fractions so of course  we're gonna round them but we're gonna  keep these raw fractional numbers in our  back pocket because they're gonna come  in handy later so you'll see i end up  with 150 cars during the hour which is a  tiny bit higher than the  142.5 that i expected but you know  random factors and rounding now remember  the capacity of this left turn is six  vehicles per 120 seconds so you can see  that there are eight vehicles over the  course of the hour that arrive in time  for a protected turn phase but six  vehicles have already arrived ahead of  them so they don't get served and they  have to wait another 120 second cycle  but it's actually worse than that each  of the eight vehicles spills into the  next cycle taking away some of the  capacity that was supposed to be  available for the vehicles that arrived  in the next two minutes so depending on  how much demand there was for the next  cycle you can potentially have a  cascading effect here so for this first  baseline scenario with 150 cars you get  seven additional cars that are displaced  so there are actually a total of 15 cars  that have to wait the additional 120  seconds right here you should already  start to realize that this is a  compounding problem so let's set up a  performance measure we're going to track  average delay which is probably the most  commonly used metric for signalized  intersection performance it's the basis  of level of service or loss so a few  assumptions let's say the average car  shows up halfway through the cycle and  if it gets served within that cycle  which most of them do in this baseline  scenario then those cars will average 60  seconds of signal delay or half to cycle  this is the way everyone hopes the  intersection operates and as long as you  can keep traffic conditions in the  uncongested regime you can really keep  adding cards without any additional  average delay so for example i can take  my randomized distribution and scale it  down until there's no congestion at all  this happens at about 120 vehicles and  in that case the average delay is 60  seconds no one is getting hit with an  extra cycle you really can't do better  than this but at 150 vehicles i've got  135 that are waiting just the 60 seconds  and i've got 15 that are waiting an  additional 120 seconds that's a total of  10 800 seconds divided by 150 vehicles  that's 72 seconds per vehicle and note  that eight of my 30 cycles are now right  at capacity and nine are over capacity  so odds are the next car that shows up  is probably going to have to weigh an  additional cycle okay so that's what the  left turn looks like when it's starting  to creep into a congested state now  let's add 10 vehicles i'm gonna scale up  my raw unrounded numbers until the  rounded distribution  adds up to 160. and this is what that  looks like 10 of my 32 second increments  now have an additional vehicle those  vehicles push other vehicles into  failure too so you should really start  to intuit that this is a domino effect  and it's gonna get progressively worse  every time i add 10 more cars this  vehicle that shows up at 440 is the  worst case it impacts the next four  cycles adding another 120 seconds of  delay for one vehicle in each of those  four cycles so the bottom line is i've  only added 10 vehicles that's 6.7  but my average delay goes from 72  seconds to 81 and that's a 12.5 increase  also where 17 of my 30 cycles were at or  over capacity when i had 150 vehicles  now 20 of the 30 cycles are which again  is increasing the probability that the  next car will hit a cycle that's already  maxed out i'm going to go through  additional scenarios and talk about  policy implications etc but first if  you're getting value out of this video  please pay your respects to the  algorithm and in general if you enjoy  nerdy explorations of transportation in  cities go ahead and subscribe if you  haven't already it's much appreciated  okay i won't get too far into the  details of the remaining scenarios  because it's the same story and it just  gets messier but here's what happens  at 170 vehicles the average delay is 98  seconds so we increased the original  volume of 150 by 13.3 percent but your  average delay is up 36  then at 180 vehicles your average delay  is 144 seconds so you've scaled your  traffic volume up 20  but you've increased the average delay  by a hundred percent you've doubled it  remember this is the same randomized  demand curve i started with i'm just  scaling it up and down the precise  percentages i'm citing will change if i  start with a different random number  seeding but the overall story is always  going to be the same this is exponential  growth and really by this point people  are starting to look at different routes  that avoid this left turn people are  taking the bus and biking or adjusting  their departure time or just not making  a trip at all and the city traffic  engineer is definitely getting phone  calls so a couple notes first despite  the way i characterized traffic dynamics  here there's really no such thing as  existing traffic that was minding its  own business and additional traffic  that's causing all the problems if  traffic is in a congested state then  every driver is really sharing equally  in the blame and the consequences as a  driver you perceive congestion as  something that's happening to you but  the reality is you are the congestion  second keep in mind this is very  simplified actual urban traffic is  dynamic and complex and congestion  manifests in a lot of ways for example  in a congested state that 12 second left  turn phase may not be able to  accommodate six vehicles you could have  spill back from a downstream bottleneck  that blocks the receiving lane you could  have excessive cueing in the through  lane that blocks the churn pocket so you  can't queue up six vehicles for the  phase and on the flip side the turn lane  itself can overflow and block the  through lane so these are all ways that  congested conditions reduce the actual  efficiency of the system so really what  i've presented here is kind of an  optimistic scenario so the point i hope  i've driven home here is not only do  more cars mean more congestion each  additional car means exponentially more  congestion which is bad for everyone so  what's the solution for some people  usually the people who are in charge of  policy and funding what this all  suggests is you really need to build  roads and intersections as big as  possible so you never reach the  congested state you can go to pretty  much any us state and see this approach  in action and decide for yourself if it  actually works or not another approach  is to make sure that the alternatives to  driving are abundant and competitive so  that when you do start tipping over into  hyper congestion people have the freedom  to make other choices or and hear me out  congestion pricing get people to pay for  the privilege of driving on an efficient  reliable uncongested network and invest  the proceeds in transit and active  transportation i made that sound simple  there's a lot to get into there and i'll  probably do that in a future video but  feel free to let me know your thoughts  on congestion pricing down in the  comments below and that's all i've got  for today keep the great comments and  viewer suggestions coming they really do  make this a better channel thanks for  joining and i'll be back with a new  topic next week see you then
 

00:00:04.230 --> 00:00:06.389 align:start position:0%
 
 

00:00:06.389 --> 00:00:09.509 align:start position:0%
 
 

00:00:09.509 --> 00:00:12.709 align:start position:0%
 
 

00:00:12.709 --> 00:00:14.870 align:start position:0%
 
 

00:00:14.870 --> 00:00:17.349 align:start position:0%
 
 

00:00:17.349 --> 00:00:19.990 align:start position:0%
 
 

00:00:19.990 --> 00:00:21.670 align:start position:0%
 
 

00:00:21.670 --> 00:00:24.630 align:start position:0%
 
 

00:00:24.630 --> 00:00:26.550 align:start position:0%
 
 

00:00:26.550 --> 00:00:28.470 align:start position:0%
 
 

00:00:28.470 --> 00:00:30.790 align:start position:0%
 
 

00:00:30.790 --> 00:00:33.190 align:start position:0%
 
 

00:00:33.190 --> 00:00:35.990 align:start position:0%
 
 

00:00:35.990 --> 00:00:37.670 align:start position:0%
 
 

00:00:37.670 --> 00:00:41.030 align:start position:0%
 
 

00:00:41.030 --> 00:00:42.869 align:start position:0%
 
 

00:00:42.869 --> 00:00:45.510 align:start position:0%
 
 

00:00:45.510 --> 00:00:49.110 align:start position:0%
 
 

00:00:49.110 --> 00:00:51.510 align:start position:0%
 
 

00:00:51.510 --> 00:00:54.150 align:start position:0%
 
 

00:00:54.150 --> 00:00:56.630 align:start position:0%
 
 

00:00:56.630 --> 00:00:59.430 align:start position:0%
 
 

00:00:59.430 --> 00:01:01.750 align:start position:0%
 
 

00:01:01.750 --> 00:01:04.149 align:start position:0%
 
 

00:01:04.149 --> 00:01:07.750 align:start position:0%
 
 

00:01:07.750 --> 00:01:10.630 align:start position:0%
 
 

00:01:10.630 --> 00:01:12.630 align:start position:0%
 
 

00:01:12.630 --> 00:01:15.749 align:start position:0%
 
 

00:01:15.749 --> 00:01:17.990 align:start position:0%
 
 

00:01:17.990 --> 00:01:20.310 align:start position:0%
 
 

00:01:20.310 --> 00:01:23.030 align:start position:0%
 
 

00:01:23.030 --> 00:01:25.429 align:start position:0%
 
 

00:01:25.429 --> 00:01:28.070 align:start position:0%
 
 

00:01:28.070 --> 00:01:29.590 align:start position:0%
 
 

00:01:29.590 --> 00:01:31.670 align:start position:0%
 
 

00:01:31.670 --> 00:01:33.670 align:start position:0%
 
 

00:01:33.670 --> 00:01:35.270 align:start position:0%
 
 

00:01:35.270 --> 00:01:37.030 align:start position:0%
 
 

00:01:37.030 --> 00:01:39.830 align:start position:0%
 
 

00:01:39.830 --> 00:01:42.230 align:start position:0%
 
 

00:01:42.230 --> 00:01:45.190 align:start position:0%
 
 

00:01:45.190 --> 00:01:47.429 align:start position:0%
 
 

00:01:47.429 --> 00:01:49.910 align:start position:0%
 
 

00:01:49.910 --> 00:01:52.710 align:start position:0%
 
 

00:01:52.710 --> 00:01:54.550 align:start position:0%
 
 

00:01:54.550 --> 00:01:57.030 align:start position:0%
 
 

00:01:57.030 --> 00:01:58.630 align:start position:0%
 
 

00:01:58.630 --> 00:02:00.389 align:start position:0%
 
 

00:02:00.389 --> 00:02:02.709 align:start position:0%
 
 

00:02:02.709 --> 00:02:04.950 align:start position:0%
 
 

00:02:04.950 --> 00:02:07.030 align:start position:0%
 
 

00:02:07.030 --> 00:02:09.990 align:start position:0%
 
 

00:02:09.990 --> 00:02:12.949 align:start position:0%
 
 

00:02:12.949 --> 00:02:15.510 align:start position:0%
 
 

00:02:15.510 --> 00:02:18.229 align:start position:0%
 
 

00:02:18.229 --> 00:02:19.910 align:start position:0%
 
 

00:02:19.910 --> 00:02:22.309 align:start position:0%
 
 

00:02:22.309 --> 00:02:25.350 align:start position:0%
 
 

00:02:25.350 --> 00:02:27.110 align:start position:0%
 
 

00:02:27.110 --> 00:02:28.869 align:start position:0%
 
 

00:02:28.869 --> 00:02:31.030 align:start position:0%
 
 

00:02:31.030 --> 00:02:33.830 align:start position:0%
 
 

00:02:33.830 --> 00:02:35.589 align:start position:0%
 
 

00:02:35.589 --> 00:02:37.750 align:start position:0%
 
 

00:02:37.750 --> 00:02:40.790 align:start position:0%
 
 

00:02:40.790 --> 00:02:44.869 align:start position:0%
 
 

00:02:44.869 --> 00:02:48.229 align:start position:0%
 
 

00:02:48.229 --> 00:02:50.470 align:start position:0%
 
 

00:02:50.470 --> 00:02:52.869 align:start position:0%
 
 

00:02:52.869 --> 00:02:54.710 align:start position:0%
 
 

00:02:54.710 --> 00:02:56.869 align:start position:0%
 
 

00:02:56.869 --> 00:02:59.030 align:start position:0%
 
 

00:02:59.030 --> 00:03:01.430 align:start position:0%
 
 

00:03:01.430 --> 00:03:04.229 align:start position:0%
 
 

00:03:04.229 --> 00:03:06.229 align:start position:0%
 
 

00:03:06.229 --> 00:03:08.390 align:start position:0%
 
 

00:03:08.390 --> 00:03:11.270 align:start position:0%
 
 

00:03:11.270 --> 00:03:13.509 align:start position:0%
 
 

00:03:13.509 --> 00:03:16.070 align:start position:0%
 
 

00:03:16.070 --> 00:03:18.390 align:start position:0%
 
 

00:03:18.390 --> 00:03:21.430 align:start position:0%
 
 

00:03:21.430 --> 00:03:23.990 align:start position:0%
 
 

00:03:23.990 --> 00:03:26.789 align:start position:0%
 
 

00:03:26.789 --> 00:03:29.030 align:start position:0%
 
 

00:03:29.030 --> 00:03:31.750 align:start position:0%
 
 

00:03:31.750 --> 00:03:34.470 align:start position:0%
 
 

00:03:34.470 --> 00:03:37.270 align:start position:0%
 
 

00:03:37.270 --> 00:03:39.830 align:start position:0%
 
 

00:03:39.830 --> 00:03:43.030 align:start position:0%
 
 

00:03:43.030 --> 00:03:45.830 align:start position:0%
 
 

00:03:45.830 --> 00:03:48.229 align:start position:0%
 
 

00:03:48.229 --> 00:03:50.869 align:start position:0%
 
 

00:03:50.869 --> 00:03:53.429 align:start position:0%
 
 

00:03:53.429 --> 00:03:55.270 align:start position:0%
 
 

00:03:55.270 --> 00:03:57.910 align:start position:0%
 
 

00:03:57.910 --> 00:04:00.390 align:start position:0%
 
 

00:04:00.390 --> 00:04:02.229 align:start position:0%
 
 

00:04:02.229 --> 00:04:04.229 align:start position:0%
 
 

00:04:04.229 --> 00:04:06.229 align:start position:0%
 
 

00:04:06.229 --> 00:04:08.630 align:start position:0%
 
 

00:04:08.630 --> 00:04:11.990 align:start position:0%
 
 

00:04:11.990 --> 00:04:13.949 align:start position:0%
 
 

00:04:13.949 --> 00:04:17.189 align:start position:0%
 
 

00:04:17.189 --> 00:04:20.150 align:start position:0%
 
 

00:04:20.150 --> 00:04:22.950 align:start position:0%
 
 

00:04:22.950 --> 00:04:26.230 align:start position:0%
 
 

00:04:26.230 --> 00:04:28.070 align:start position:0%
 
 

00:04:28.070 --> 00:04:30.469 align:start position:0%
 
 

00:04:30.469 --> 00:04:33.270 align:start position:0%
 
 

00:04:33.270 --> 00:04:35.110 align:start position:0%
 
 

00:04:35.110 --> 00:04:37.430 align:start position:0%
 
 

00:04:37.430 --> 00:04:40.230 align:start position:0%
 
 

00:04:40.230 --> 00:04:42.469 align:start position:0%
 
 

00:04:42.469 --> 00:04:44.790 align:start position:0%
 
 

00:04:44.790 --> 00:04:46.790 align:start position:0%
 
 

00:04:46.790 --> 00:04:48.629 align:start position:0%
 
 

00:04:48.629 --> 00:04:51.189 align:start position:0%
 
 

00:04:51.189 --> 00:04:53.590 align:start position:0%
 
 

00:04:53.590 --> 00:04:56.070 align:start position:0%
 
 

00:04:56.070 --> 00:04:58.390 align:start position:0%
 
 

00:04:58.390 --> 00:05:01.510 align:start position:0%
 
 

00:05:01.510 --> 00:05:04.870 align:start position:0%
 
 

00:05:04.870 --> 00:05:08.070 align:start position:0%
 
 

00:05:08.070 --> 00:05:10.629 align:start position:0%
 
 

00:05:10.629 --> 00:05:13.110 align:start position:0%
 
 

00:05:13.110 --> 00:05:14.950 align:start position:0%
 
 

00:05:14.950 --> 00:05:16.629 align:start position:0%
 
 

00:05:16.629 --> 00:05:19.270 align:start position:0%
 
 

00:05:19.270 --> 00:05:21.189 align:start position:0%
 
 

00:05:21.189 --> 00:05:23.990 align:start position:0%
 
 

00:05:23.990 --> 00:05:26.790 align:start position:0%
 
 

00:05:26.790 --> 00:05:29.110 align:start position:0%
 
 

00:05:29.110 --> 00:05:32.469 align:start position:0%
 
 

00:05:32.469 --> 00:05:35.189 align:start position:0%
 
 

00:05:35.189 --> 00:05:37.670 align:start position:0%
 
 

00:05:37.670 --> 00:05:39.749 align:start position:0%
 
 

00:05:39.749 --> 00:05:41.749 align:start position:0%
 
 

00:05:41.749 --> 00:05:44.550 align:start position:0%
 
 

00:05:44.550 --> 00:05:47.270 align:start position:0%
 
 

00:05:47.270 --> 00:05:49.110 align:start position:0%
 
 

00:05:49.110 --> 00:05:51.590 align:start position:0%
 
 

00:05:51.590 --> 00:05:54.070 align:start position:0%
 
 

00:05:54.070 --> 00:05:56.790 align:start position:0%
 
 

00:05:56.790 --> 00:05:58.950 align:start position:0%
 
 

00:05:58.950 --> 00:06:01.670 align:start position:0%
 
 

00:06:01.670 --> 00:06:04.950 align:start position:0%
 
 

00:06:04.950 --> 00:06:07.189 align:start position:0%
 
 

00:06:07.189 --> 00:06:10.150 align:start position:0%
 
 

00:06:10.150 --> 00:06:12.550 align:start position:0%
 
 

00:06:12.550 --> 00:06:14.469 align:start position:0%
 
 

00:06:14.469 --> 00:06:16.469 align:start position:0%
 
 

00:06:16.469 --> 00:06:19.749 align:start position:0%
 
 

00:06:19.749 --> 00:06:23.189 align:start position:0%
 
 

00:06:23.189 --> 00:06:25.590 align:start position:0%
 
 

00:06:25.590 --> 00:06:28.710 align:start position:0%
 
 

00:06:28.710 --> 00:06:33.189 align:start position:0%
 
 

00:06:33.189 --> 00:06:36.150 align:start position:0%
 
 

00:06:36.150 --> 00:06:38.790 align:start position:0%
 
 

00:06:38.790 --> 00:06:42.710 align:start position:0%
 
 

00:06:42.710 --> 00:06:45.590 align:start position:0%
 
 

00:06:45.590 --> 00:06:47.270 align:start position:0%
 
 

00:06:47.270 --> 00:06:49.430 align:start position:0%
 
 

00:06:49.430 --> 00:06:51.110 align:start position:0%
 
 

00:06:51.110 --> 00:06:53.430 align:start position:0%
 
 

00:06:53.430 --> 00:06:56.230 align:start position:0%
 
 

00:06:56.230 --> 00:06:58.710 align:start position:0%
 
 

00:06:58.710 --> 00:07:00.469 align:start position:0%
 
 

00:07:00.469 --> 00:07:03.510 align:start position:0%
 
 

00:07:03.510 --> 00:07:07.350 align:start position:0%
 
 

00:07:07.350 --> 00:07:09.430 align:start position:0%
 
 

00:07:09.430 --> 00:07:11.749 align:start position:0%
 
 

00:07:11.749 --> 00:07:14.469 align:start position:0%
 
 

00:07:14.469 --> 00:07:17.029 align:start position:0%
 
 

00:07:17.029 --> 00:07:19.110 align:start position:0%
 
 

00:07:19.110 --> 00:07:21.350 align:start position:0%
 
 

00:07:21.350 --> 00:07:24.150 align:start position:0%
 
 

00:07:24.150 --> 00:07:26.629 align:start position:0%
 
 

00:07:26.629 --> 00:07:29.510 align:start position:0%
 
 

00:07:29.510 --> 00:07:31.830 align:start position:0%
 
 

00:07:31.830 --> 00:07:34.230 align:start position:0%
 
 

00:07:34.230 --> 00:07:37.990 align:start position:0%
 
 

00:07:37.990 --> 00:07:40.309 align:start position:0%
 
 

00:07:40.309 --> 00:07:44.469 align:start position:0%
 
 

00:07:44.469 --> 00:07:48.469 align:start position:0%
 
 

00:07:48.469 --> 00:07:51.670 align:start position:0%
 
 

00:07:51.670 --> 00:07:55.110 align:start position:0%
 
 

00:07:55.110 --> 00:07:57.589 align:start position:0%
 
 

00:07:57.589 --> 00:08:00.309 align:start position:0%
 
 

00:08:00.309 --> 00:08:01.990 align:start position:0%
 
 

00:08:01.990 --> 00:08:03.749 align:start position:0%
 
 

00:08:03.749 --> 00:08:07.189 align:start position:0%
 
 

00:08:07.189 --> 00:08:09.110 align:start position:0%
 
 

00:08:09.110 --> 00:08:10.869 align:start position:0%
 
 

00:08:10.869 --> 00:08:13.670 align:start position:0%
 
 

00:08:13.670 --> 00:08:16.550 align:start position:0%
 
 

00:08:16.550 --> 00:08:18.550 align:start position:0%
 
 

00:08:18.550 --> 00:08:20.869 align:start position:0%
 
 

00:08:20.869 --> 00:08:22.469 align:start position:0%
 
 

00:08:22.469 --> 00:08:24.629 align:start position:0%
 
 

00:08:24.629 --> 00:08:26.950 align:start position:0%
 
 

00:08:26.950 --> 00:08:29.510 align:start position:0%
 
 

00:08:29.510 --> 00:08:32.709 align:start position:0%
 
 

00:08:32.709 --> 00:08:35.110 align:start position:0%
 
 

00:08:35.110 --> 00:08:39.509 align:start position:0%
 
 

00:08:39.509 --> 00:08:41.829 align:start position:0%
 
 

00:08:41.829 --> 00:08:44.630 align:start position:0%
 
 

00:08:44.630 --> 00:08:48.310 align:start position:0%
 
 

00:08:48.310 --> 00:08:50.230 align:start position:0%
 
 

00:08:50.230 --> 00:08:52.070 align:start position:0%
 
 

00:08:52.070 --> 00:08:55.190 align:start position:0%
 
 

00:08:55.190 --> 00:08:57.110 align:start position:0%
 
 

00:08:57.110 --> 00:08:59.350 align:start position:0%
 
 

00:08:59.350 --> 00:09:01.190 align:start position:0%
 
 

00:09:01.190 --> 00:09:04.230 align:start position:0%
 
 

00:09:04.230 --> 00:09:05.910 align:start position:0%
 
 

00:09:05.910 --> 00:09:08.550 align:start position:0%
 
 

00:09:08.550 --> 00:09:10.790 align:start position:0%
 
 

00:09:10.790 --> 00:09:13.030 align:start position:0%
 
 

00:09:13.030 --> 00:09:15.110 align:start position:0%
 
 

00:09:15.110 --> 00:09:17.590 align:start position:0%
 
 

00:09:17.590 --> 00:09:20.389 align:start position:0%
 
 

00:09:20.389 --> 00:09:23.110 align:start position:0%
 
 

00:09:23.110 --> 00:09:25.430 align:start position:0%
 
 

00:09:25.430 --> 00:09:27.350 align:start position:0%
 
 

00:09:27.350 --> 00:09:30.630 align:start position:0%
 
 

00:09:30.630 --> 00:09:32.949 align:start position:0%
 
 

00:09:32.949 --> 00:09:35.190 align:start position:0%
 
 

00:09:35.190 --> 00:09:37.829 align:start position:0%
 
 

00:09:37.829 --> 00:09:40.630 align:start position:0%
 
 

00:09:40.630 --> 00:09:42.710 align:start position:0%
 
 

00:09:42.710 --> 00:09:45.190 align:start position:0%
 
 

00:09:45.190 --> 00:09:47.509 align:start position:0%
 
 

00:09:47.509 --> 00:09:50.310 align:start position:0%
 
 

00:09:50.310 --> 00:09:52.550 align:start position:0%
 
 

00:09:52.550 --> 00:09:54.550 align:start position:0%
 
 

00:09:54.550 --> 00:09:57.190 align:start position:0%
 
 

00:09:57.190 --> 00:09:58.710 align:start position:0%
 
 

00:09:58.710 --> 00:10:01.190 align:start position:0%
 
 

00:10:01.190 --> 00:10:03.670 align:start position:0%
 
 

00:10:03.670 --> 00:10:06.710 align:start position:0%
 
 

00:10:06.710 --> 00:10:09.430 align:start position:0%
 
 

00:10:09.430 --> 00:10:11.590 align:start position:0%
 
 

00:10:11.590 --> 00:10:14.389 align:start position:0%
 
 

00:10:14.389 --> 00:10:16.630 align:start position:0%
 
 

00:10:16.630 --> 00:10:18.870 align:start position:0%
 
 

00:10:18.870 --> 00:10:21.190 align:start position:0%
 
 

00:10:21.190 --> 00:10:24.230 align:start position:0%
 
 

00:10:24.230 --> 00:10:26.230 align:start position:0%
 
 

00:10:26.230 --> 00:10:28.710 align:start position:0%
 
 

00:10:28.710 --> 00:10:31.030 align:start position:0%
 
 

00:10:31.030 --> 00:10:33.910 align:start position:0%
 
 

00:10:33.910 --> 00:10:36.710 align:start position:0%
 
 

00:10:36.710 --> 00:10:39.269 align:start position:0%
 
 

00:10:39.269 --> 00:10:41.190 align:start position:0%
 
 

00:10:41.190 --> 00:10:43.829 align:start position:0%
 
 

00:10:43.829 --> 00:10:46.310 align:start position:0%
 
 

00:10:46.310 --> 00:10:48.710 align:start position:0%
 
 

00:10:48.710 --> 00:10:51.269 align:start position:0%
 
 

00:10:51.269 --> 00:10:54.310 align:start position:0%
 
 

00:10:54.310 --> 00:10:56.630 align:start position:0%
 
 

00:10:56.630 --> 00:10:58.949 align:start position:0%
 
 

00:10:58.949 --> 00:11:00.790 align:start position:0%
 
 

00:11:00.790 --> 00:11:03.110 align:start position:0%
 
 

00:11:03.110 --> 00:11:05.430 align:start position:0%
 
 

00:11:05.430 --> 00:11:07.269 align:start position:0%
 
 

00:11:07.269 --> 00:11:09.269 align:start position:0%
 
 

00:11:09.269 --> 00:11:11.990 align:start position:0%
 
 

00:11:11.990 --> 00:11:14.949 align:start position:0%
 
 

00:11:14.949 --> 00:11:17.269 align:start position:0%
 
 

00:11:17.269 --> 00:11:19.910 align:start position:0%
 
 

00:11:19.910 --> 00:11:22.870 align:start position:0%
 
 

00:11:22.870 --> 00:11:24.949 align:start position:0%
 
 

00:11:24.949 --> 00:11:27.509 align:start position:0%
 
 

00:11:27.509 --> 00:11:31.110 align:start position:0%
 
 

00:11:31.110 --> 00:11:33.590 align:start position:0%
 
 

00:11:33.590 --> 00:11:36.470 align:start position:0%
 
 

00:11:36.470 --> 00:11:40.310 align:start position:0%
 
 

00:11:40.310 --> 00:11:42.550 align:start position:0%
 
 

00:11:42.550 --> 00:11:44.710 align:start position:0%
 
 

00:11:44.710 --> 00:11:46.470 align:start position:0%
 
 

00:11:46.470 --> 00:11:48.949 align:start position:0%
 
 

00:11:48.949 --> 00:11:50.629 align:start position:0%
 
 

00:11:50.629 --> 00:11:52.550 align:start position:0%
 
 

00:11:52.550 --> 00:11:55.030 align:start position:0%
 
 

00:11:55.030 --> 00:11:57.030 align:start position:0%
 
 

00:11:57.030 --> 00:11:59.030 align:start position:0%
 
 

00:11:59.030 --> 00:12:00.710 align:start position:0%
 
 

00:12:00.710 --> 00:12:02.629 align:start position:0%
 
 

00:12:02.629 --> 00:12:06.720 align:start position:0%
 
 

